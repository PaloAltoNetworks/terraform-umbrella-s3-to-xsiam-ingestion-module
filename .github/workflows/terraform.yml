name: Terraform Format and Docs

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch all history to allow diffing against previous commits
          fetch-depth: 0
          # This token is required to push changes back to the repository
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~> 1.0

      - name: Generate terraform docs
        uses: terraform-docs/gh-actions@main
        with:
          # Specify the working directory if your Terraform files are not in the root
          working-dir: .
          # Specify the output file for the documentation
          output-file: README.md
          # Specify the output method (e.g., inject, replace)
          output-method: inject
          # Do no commit and push changes made by terraform-docs
          git-push: "false"

      - name: Run terraform fmt (check mode)
        run: |
          # Run terraform fmt to check formatting
          # The -check=true flag makes it exit with a non-zero code if files need formatting
          # -recursive ensures it checks subdirectories
          terraform fmt -check=true -recursive

      - name: Check for uncommitted changes
        run: |
          # Check if running terraform-docs or terraform fmt made any changes
          # If changes are detected (README.md or .tf files), the diff command will exit with a non-zero status
          # which will cause this GitHub Action step to fail.
          # This enforces that formatting and docs are up-to-date before merging.
          git diff --exit-code
