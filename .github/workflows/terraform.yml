name: Terraform Format and Docs

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform-check:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch all history to allow diffing against previous commits
          fetch-depth: 0
          # This token is required to push changes back to the repository
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ~> 1.0

      - name: Generate terraform docs and push changes
        uses: terraform-docs/gh-actions@main
        with:
          # Specify the working directory if your Terraform files are not in the root
          working-dir: .
          # Specify the output file for the documentation
          output-file: README.md
          # Specify the output method (e.g., inject, replace)
          output-method: inject
          # Automatically commit and push changes made by terraform-docs
          git-push: "true"
          # Configure Git user for the commit made by this action
          git-commit-message: "docs: Apply terraform-docs changes"
          git-add: README.md # Ensure only README.md is added by this action

      - name: Run terraform fmt
        run: |
          # Run terraform fmt to check formatting
          terraform fmt

      - name: Commit and Push changes
        run: |
          # Configure Git user for the commit
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com

          # Add the modified README.md and any formatted .tf files
          git add *.tf

          # Check if there are any staged changes using git status --porcelain
          # If there are changes (output is not empty), commit and push
          if [[ -n "$(git status --porcelain)" ]]; then
            git commit -m "style: Apply terraform fmt changes"
            git push
          else
            echo "No terraform fmt changes to commit."
          fi
